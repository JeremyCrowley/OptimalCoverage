close all;
clear;
clc;

% simulation parameters
N = 10;
L = 10;
ts = 0.1;


% viz parameters
delay = 0.25;

% define nodes and IC
numNodes = 6;
nodes = linspace(1,numNodes,numNodes);

% initial conditions
%IC = [-1.2,1.3,0,0,0.5,0.8;
%      0,0,-1.5,1,0.5,-0.2];
IC = [0,   0.1,  0.1  -0.1, -0.1, 0;
      0,   0,   -0.1, -0.1, 0.1,  0.1];
%IC = [0,   0.1,  0.1;
%      0,   0,   -0.1];

% IC size      
[m,n] = size(IC);
 
% boundary
b = 4.5;
config = [-b b -b b];

% proximity communication
senseR = 2;
commR = 6;

% obstacle position
xObst = [0.5;-0.5];
uObst = [-0.75;0.75];
threshold = 0.5;

% initial conditions
uGuess = zeros(m,1);

% predict obst
xObstPoly = integratorReach(xObst,uObst,ts,N);


% draw polytopes of traj
%{
figure(); hold on;
for i = 1:N
    %scatter(xObstPoly(1,:,i),xObstPoly(2,:,i));
    %[xObstPoly(1,:,i)',xObstPoly(2,:,i)']
	
    if(i==1)
        xObstPoly(1,1,i),xObstPoly(2,1,i)
        circle(xObstPoly(1,1,i),xObstPoly(2,1,i),threshold,[.58 0.81 0.98])
    else
        k = convhull(xObstPoly(1,:,i),xObstPoly(2,:,i));
        polyin = polyshape(xObstPoly(1,k,i),xObstPoly(2,k,i));
        polybuff = polybuffer(polyin,threshold);
        plot(xObstPoly(1,k,i),xObstPoly(2,k,i),'r-')
        plot(polybuff) 
    end
        
    drawnow;
    pause(0.1)
    
end
%}


% optimize
tic
[uopt,g] = optimalInputCoverage(IC, N, ts, L, uGuess, nodes, config, commR, senseR, xObstPoly, threshold);
toc
uopt;

showOptimization(g,nodes,numNodes,config,commR,senseR,xObstPoly,threshold,delay);

%}
